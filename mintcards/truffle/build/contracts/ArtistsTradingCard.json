{
  "contractName": "ArtistsTradingCard",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600c553480156200001657600080fd5b506040805190810160405280601281526020017f4172746973747354726164696e674361726400000000000000000000000000008152506040805190810160405280600381526020017f415443000000000000000000000000000000000000000000000000000000000081525081600490805190602001906200009b929190620000fe565b508060059080519060200190620000b4929190620000fe565b50505033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001ad565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014157805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017157825182559160200191906001019062000154565b5b50905062000181919062000185565b5090565b620001aa91905b80821115620001a65760008160009055506001016200018c565b5090565b90565b6124a180620001bd6000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010c578063081812fc1461019c578063095ea7b3146102095780631249c58b1461025657806318160ddd1461026d57806323b872dd146102985780632f745c591461030557806342842e0e146103665780634f558e79146103d35780634f6ccce7146104185780636352211e1461045957806370a08231146104c65780638da5cb5b1461051d57806395d89b4114610574578063a22cb46514610604578063b88d4fde14610653578063c87b56dd14610706578063e985e9c5146107ac578063f2fde38b14610827575b600080fd5b34801561011857600080fd5b5061012161086a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610161578082015181840152602081019050610146565b50505050905090810190601f16801561018e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101a857600080fd5b506101c76004803603810190808035906020019092919050505061090c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021557600080fd5b50610254600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610949565b005b34801561026257600080fd5b5061026b610b0f565b005b34801561027957600080fd5b50610282610b9b565b6040518082815260200191505060405180910390f35b3480156102a457600080fd5b50610303600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba8565b005b34801561031157600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cbf565b6040518082815260200191505060405180910390f35b34801561037257600080fd5b506103d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d36565b005b3480156103df57600080fd5b506103fe60048036038101908080359060200190929190505050610d6e565b604051808215151515815260200191505060405180910390f35b34801561042457600080fd5b5061044360048036038101908080359060200190929190505050610ddf565b6040518082815260200191505060405180910390f35b34801561046557600080fd5b5061048460048036038101908080359060200190929190505050610e17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104d257600080fd5b50610507600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e94565b6040518082815260200191505060405180910390f35b34801561052957600080fd5b50610532610f18565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058057600080fd5b50610589610f3e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105c95780820151818401526020810190506105ae565b50505050905090810190601f1680156105f65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561061057600080fd5b50610651600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610fe0565b005b34801561065f57600080fd5b50610704600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061111c565b005b34801561071257600080fd5b506107316004803603810190808035906020019092919050505061115b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610771578082015181840152602081019050610756565b50505050905090810190601f16801561079e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107b857600080fd5b5061080d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d5565b604051808215151515815260200191505060405180910390f35b34801561083357600080fd5b50610868600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611269565b005b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109025780601f106108d757610100808354040283529160200191610902565b820191906000526020600020905b8154815290600101906020018083116108e557829003601f168201915b5050505050905090565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061095482610e17565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561099157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806109d157506109d081336111d5565b5b15156109dc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166109fd8361090c565b73ffffffffffffffffffffffffffffffffffffffff16141580610a4d5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610b0a57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b6d57600080fd5b600c549050610b886001600c546113c190919063ffffffff16565b600c81905550610b9833826113dd565b50565b6000600880549050905090565b80610bb33382611434565b1515610bbe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610bfa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c3657600080fd5b610c4084836114c9565b610c4a8483611632565b610c54838361184a565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610cca83610e94565b82101515610cd757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d2357fe5b9060005260206000200154905092915050565b80610d413382611434565b1515610d4c57600080fd5b610d68848484602060405190810160405280600081525061111c565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000610de9610b9b565b82101515610df657600080fd5b600882815481101515610e0557fe5b90600052602060002001549050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e8b57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610ed157600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd65780601f10610fab57610100808354040283529160200191610fd6565b820191906000526020600020905b815481529060010190602001808311610fb957829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561101b57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816111273382611434565b151561113257600080fd5b61113d858585610ba8565b61114985858585611921565b151561115457600080fd5b5050505050565b60606111ce606060405190810160405280603e81526020017f68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6181526020017f72746973747374726164696e67636172642e636f6d2f617274636172642f00008152509150816111c984611b0f565b611c66565b9050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561130157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081830190508281101515156113d457fe5b80905092915050565b6113e78282611cad565b600880549050600960008381526020019081526020016000208190555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008061144083610e17565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114af57508373ffffffffffffffffffffffffffffffffffffffff166114978461090c565b73ffffffffffffffffffffffffffffffffffffffff16145b806114c057506114bf81856111d5565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff166114e982610e17565b73ffffffffffffffffffffffffffffffffffffffff1614151561150b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561162e5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b60008060006116418585611d5d565b600760008581526020019081526020016000205492506116ad6001600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611e8b90919063ffffffff16565b9150600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156116fb57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561175557fe5b90600052602060002001819055506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156117b157fe5b9060005260206000200181905550600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036118119190612424565b50600060076000868152602001908152602001600020819055508260076000838152602001908152602001600020819055505050505050565b60006118568383611ea4565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806007600084815260200190815260200160002081905550505050565b6000806119438573ffffffffffffffffffffffffffffffffffffffff16611ffc565b15156119525760019150611b06565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a145780820151818401526020810190506119f9565b50505050905090810190601f168015611a415780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015611a6257600080fd5b505af1158015611a76573d6000803e3d6000fd5b505050506040513d6020811015611a8c57600080fd5b8101908080519060200190929190505050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b60606000806060600080861415611b5d576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509450611c5d565b8593505b600084141515611b87578280600101935050600a84811515611b7f57fe5b049350611b61565b826040519080825280601f01601f191660200182016040528015611bba5781602001602082028038833980820191505090505b5091506001830390505b600086141515611c5957600a86811515611bda57fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515611c1557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515611c5157fe5b049550611bc4565b8194505b50505050919050565b6060611ca5838360206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525061200f565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ce957600080fd5b611cf3828261184a565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff16611d7d82610e17565b73ffffffffffffffffffffffffffffffffffffffff16141515611d9f57600080fd5b611df26001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e8b90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000828211151515611e9957fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f1157600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fb56001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113c190919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f19166020018201604052801561206d5781602001602082028038833980820191505090505b50935083925060009150600090505b885181101561212f57888181518110151561209357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156120f257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061207c565b600090505b87518110156121e757878181518110151561214b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156121aa57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612134565b600090505b865181101561229f57868181518110151561220357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561226257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121ec565b600090505b85518110156123575785818151811015156122bb57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561231a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122a4565b600090505b845181101561240f57848181518110151561237357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156123d257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061235c565b82995050505050505050505095945050505050565b81548183558181111561244b5781836000526020600020918201910161244a9190612450565b5b505050565b61247291905b8082111561246e576000816000905550600101612456565b5090565b905600a165627a7a72305820ec074139529351a450c872ec7e0d714c0e213031a778bb4cbd3f6ae498a4000c0029",
  "deployedBytecode": "",
  "sourceMap": "178:582:0:-;;;297:1;266:32;;306:67;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:67:0;1075:105:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:5;1139;:13;;;;;;;;;;;;:::i;:::-;;1168:7;1158;:17;;;;;;;;;;;;:::i;:::-;;1075:105;;509:10:5;501:5;;:18;;;;;;;;;;;;;;;;;;178:582:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "178:582:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:68:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1274:68:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3605:111:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3605:111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3021:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3021:355:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:151:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;378:151:0;;;;;;2518:87:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2518:87:10;;;;;;;;;;;;;;;;;;;;;;;5085:316:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5085:316:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:177:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2199:177:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:225:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6017:225:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2461:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:140:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2934::10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2934:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:164:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2119:164:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:142:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:72:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1440:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:205:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4001:205:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6929:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6929:302:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:225:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:225:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;532:225:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4515:142:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4515:142:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:174:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:68:10;1311:6;1332:5;1325:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:68;:::o;3605:111:8:-;3665:7;3687:14;:24;3702:8;3687:24;;;;;;;;;;;;;;;;;;;;;3680:31;;3605:111;;;:::o;3021:355::-;3082:13;3098:17;3106:8;3098:7;:17::i;:::-;3082:33;;3136:5;3129:12;;:3;:12;;;;3121:21;;;;;;;;3170:5;3156:19;;:10;:19;;;:58;;;;3179:35;3196:5;3203:10;3179:16;:35::i;:::-;3156:58;3148:67;;;;;;;;3259:1;3226:35;;:21;3238:8;3226:11;:21::i;:::-;:35;;;;:56;;;;3280:1;3265:17;;:3;:17;;;;3226:56;3222:150;;;3319:3;3292:14;:24;3307:8;3292:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3351:3;3335:30;;3344:5;3335:30;;;3356:8;3335:30;;;;;;;;;;;;;;;;;;3222:150;3021:355;;;:::o;378:151:0:-;419:15;653:5:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;437:11:0;;419:29;;468:18;484:1;468:11;;:15;;:18;;;;:::i;:::-;454:11;:32;;;;492;504:10;516:7;492:11;:32::i;:::-;378:151;:::o;2518:87:10:-;2562:7;2584:9;:16;;;;2577:23;;2518:87;:::o;5085:316:8:-;5172:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;5213:1;5196:19;;:5;:19;;;;5188:28;;;;;;;;5245:1;5230:17;;:3;:17;;;;5222:26;;;;;;;;5255:30;5269:5;5276:8;5255:13;:30::i;:::-;5291:32;5307:5;5314:8;5291:15;:32::i;:::-;5329:25;5340:3;5345:8;5329:10;:25::i;:::-;5382:3;5366:30;;5375:5;5366:30;;;5387:8;5366:30;;;;;;;;;;;;;;;;;;5085:316;;;;:::o;2199:177:10:-;2281:7;2313:17;2323:6;2313:9;:17::i;:::-;2304:6;:26;2296:35;;;;;;;;2344:11;:19;2356:6;2344:19;;;;;;;;;;;;;;;2364:6;2344:27;;;;;;;;;;;;;;;;;;2337:34;;2199:177;;;;:::o;6017:225:8:-;6132:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;6195:42;6212:5;6219:3;6224:8;6195:42;;;;;;;;;;;;;:16;:42::i;:::-;6017:225;;;;:::o;2461:140::-;2516:4;2528:13;2544:10;:20;2555:8;2544:20;;;;;;;;;;;;;;;;;;;;;2528:36;;2594:1;2577:19;;:5;:19;;;;2570:26;;2461:140;;;;:::o;2934::10:-;2993:7;3025:13;:11;:13::i;:::-;3016:6;:22;3008:31;;;;;;;;3052:9;3062:6;3052:17;;;;;;;;;;;;;;;;;;3045:24;;2934:140;;;:::o;2119:164:8:-;2175:7;2190:13;2206:10;:20;2217:8;2206:20;;;;;;;;;;;;;;;;;;;;;2190:36;;2257:1;2240:19;;:5;:19;;;;2232:28;;;;;;;;2273:5;2266:12;;2119:164;;;;:::o;1764:142::-;1820:7;1861:1;1843:20;;:6;:20;;;;1835:29;;;;;;;;1877:16;:24;1894:6;1877:24;;;;;;;;;;;;;;;;1870:31;;1764:142;;;:::o;238:20:5:-;;;;;;;;;;;;;:::o;1440:72:10:-;1479:6;1500:7;1493:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:72;:::o;4001:205:8:-;4085:10;4078:17;;:3;:17;;;;4070:26;;;;;;;;4139:9;4102:17;:29;4120:10;4102:29;;;;;;;;;;;;;;;:34;4132:3;4102:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4186:3;4159:42;;4174:10;4159:42;;;4191:9;4159:42;;;;;;;;;;;;;;;;;;;;;;4001:205;;:::o;6929:302::-;7061:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;7079:34;7092:5;7099:3;7104:8;7079:12;:34::i;:::-;7172:53;7197:5;7204:3;7209:8;7219:5;7172:24;:53::i;:::-;7164:62;;;;;;;;6929:302;;;;;:::o;532:225:0:-;589:16;620:132;647:76;;;;;;;;;;;;;;;;;;;;;;;;;;725:26;742:8;725:16;:26::i;:::-;620:17;:132::i;:::-;613:139;;532:225;;;:::o;4515:142:8:-;4597:4;4616:17;:25;4634:6;4616:25;;;;;;;;;;;;;;;:36;4642:9;4616:36;;;;;;;;;;;;;;;;;;;;;;;;;4609:43;;4515:142;;;;:::o;832:174:5:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;1008:123:4:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;5324:172:10:-;5385:26;5397:3;5402:8;5385:11;:26::i;:::-;5445:9;:16;;;;5418:14;:24;5433:8;5418:24;;;;;;;;;;;:43;;;;5467:9;5482:8;5467:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5467:24:10;;;;;;;;;;;;;;;;;;;;;;5324:172;;:::o;7578:240:8:-;7664:4;7676:13;7692:17;7700:8;7692:7;:17::i;:::-;7676:33;;7734:5;7722:17;;:8;:17;;;:54;;;;7768:8;7743:33;;:21;7755:8;7743:11;:21::i;:::-;:33;;;7722:54;:91;;;;7780:33;7797:5;7804:8;7780:16;:33::i;:::-;7722:91;7715:98;;7578:240;;;;;:::o;8887:265::-;8988:6;8967:27;;:17;8975:8;8967:7;:17::i;:::-;:27;;;8959:36;;;;;;;;9041:1;9005:38;;:14;:24;9020:8;9005:24;;;;;;;;;;;;;;;;;;;;;:38;;;;9001:147;;;9088:1;9053:14;:24;9068:8;9053:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9128:1;9103:38;;9112:6;9103:38;;;9132:8;9103:38;;;;;;;;;;;;;;;;;;9001:147;8887:265;;:::o;4202:856:10:-;4320:18;4373:22;4436:17;4275:38;4297:5;4304:8;4275:21;:38::i;:::-;4341:16;:26;4358:8;4341:26;;;;;;;;;;;;4320:47;;4398:32;4428:1;4398:11;:18;4410:5;4398:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4373:57;;4456:11;:18;4468:5;4456:18;;;;;;;;;;;;;;;4475:14;4456:34;;;;;;;;;;;;;;;;;;4436:54;;4530:9;4497:11;:18;4509:5;4497:18;;;;;;;;;;;;;;;4516:10;4497:30;;;;;;;;;;;;;;;;;:42;;;;4582:1;4545:11;:18;4557:5;4545:18;;;;;;;;;;;;;;;4564:14;4545:34;;;;;;;;;;;;;;;;;:38;;;;4944:11;:18;4956:5;4944:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5006:1;4977:16;:26;4994:8;4977:26;;;;;;;;;;;:30;;;;5043:10;5013:16;:27;5030:9;5013:27;;;;;;;;;;;:40;;;;4202:856;;;;;:::o;3697:226::-;3800:14;3763:31;3780:3;3785:8;3763:16;:31::i;:::-;3817:11;:16;3829:3;3817:16;;;;;;;;;;;;;;;:23;;;;3800:40;;3846:11;:16;3858:3;3846:16;;;;;;;;;;;;;;;3868:8;3846:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3846:31:10;;;;;;;;;;;;;;;;;;;;;;3912:6;3883:16;:26;3900:8;3883:26;;;;;;;;;;;:35;;;;3697:226;;;:::o;10623:328:8:-;10762:4;10830:13;10781:16;:3;:14;;;:16::i;:::-;10780:17;10776:49;;;10814:4;10807:11;;;;10776:49;10861:3;10846:36;;;10883:5;10890:8;10900:5;10846:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10846:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10846:60:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10846:60:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10846:60:8;;;;;;;;;;;;;;;;10830:76;;604:10;10930:15;;10920:25;;;:6;:25;;;;10912:34;;10623:328;;;;;;;;:::o;1355:405:2:-;1404:6;1454;1474:8;1566:17;1610:6;1431:1;1426;:6;1422:22;;;1434:10;;;;;;;;;;;;;;;;;;;;;;1422:22;1463:1;1454:10;;1492:65;1504:1;1499;:6;;1492:65;;;1520:5;;;;;;;1544:2;1539:7;;;;;;;;;;;1492:65;;;1596:3;1586:14;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1586:14:2;;;;1566:34;;1625:1;1619:3;:7;1610:16;;1636:89;1648:1;1643;:6;;1636:89;;;1690:2;1686:1;:6;;;;;;;;1681:2;:11;1676:17;;1664:4;1669:3;;;;;;;1664:9;;;;;;;;;;;;;;:29;;;;;;;;;;;1712:2;1707:7;;;;;;;;;;;1636:89;;;1748:4;1734:19;;1355:405;;;;;;;;:::o;1224:125::-;1288:6;1313:29;1323:2;1327;1313:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1306:36;;1224:125;;;;:::o;8072:169:8:-;8156:1;8141:17;;:3;:17;;;;8133:26;;;;;;;;8165:25;8176:3;8181:8;8165:10;:25::i;:::-;8222:3;8201:35;;8218:1;8201:35;;;8227:8;8201:35;;;;;;;;;;;;;;;;;;8072:169;;:::o;9898:214::-;10000:5;9979:26;;:17;9987:8;9979:7;:17::i;:::-;:26;;;9971:35;;;;;;;;10038:30;10066:1;10038:16;:23;10055:5;10038:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10012:16;:23;10029:5;10012:23;;;;;;;;;;;;;;;:56;;;;10105:1;10074:10;:20;10085:8;10074:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9898:214;;:::o;836:110:4:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;9415:204:8:-;9521:1;9489:34;;:10;:20;9500:8;9489:20;;;;;;;;;;;;;;;;;;;;;:34;;;9481:43;;;;;;;;9553:3;9530:10;:20;9541:8;9530:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9586:28;9612:1;9586:16;:21;9603:3;9586:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9562:16;:21;9579:3;9562:21;;;;;;;;;;;;;;;:52;;;;9415:204;;:::o;438:568:3:-;495:4;507:12;922:4;910:17;902:25;;1000:1;993:4;:8;986:15;;438:568;;;;:::o;128:795:2:-;225:6;241:16;277;313;349;385;421:19;525;567:6;590;266:2;241:28;;302:2;277:28;;338:2;313:28;;374:2;349:28;;410:2;385:28;;506:3;:10;493:3;:10;480:3;:10;467:3;:10;454:3;:10;:23;:36;:49;:62;443:74;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;443:74:2;;;;421:96;;553:5;525:34;;576:1;567:10;;599:1;590:10;;585:58;606:3;:10;602:1;:14;585:58;;;637:3;641:1;637:6;;;;;;;;;;;;;;;;;;;;623;630:3;;;;;;623:11;;;;;;;;;;;;;;:20;;;;;;;;;;;618:3;;;;;;;585:58;;;660:1;656:5;;651:53;667:3;:10;663:1;:14;651:53;;;698:3;702:1;698:6;;;;;;;;;;;;;;;;;;;;684;691:3;;;;;;684:11;;;;;;;;;;;;;;:20;;;;;;;;;;;679:3;;;;;;;651:53;;;721:1;717:5;;712:53;728:3;:10;724:1;:14;712:53;;;759:3;763:1;759:6;;;;;;;;;;;;;;;;;;;;745;752:3;;;;;;745:11;;;;;;;;;;;;;;:20;;;;;;;;;;;740:3;;;;;;;712:53;;;782:1;778:5;;773:53;789:3;:10;785:1;:14;773:53;;;820:3;824:1;820:6;;;;;;;;;;;;;;;;;;;;806;813:3;;;;;;806:11;;;;;;;;;;;;;;:20;;;;;;;;;;;801:3;;;;;;;773:53;;;843:1;839:5;;834:53;850:3;:10;846:1;:14;834:53;;;881:3;885:1;881:6;;;;;;;;;;;;;;;;;;;;867;874:3;;;;;;867:11;;;;;;;;;;;;;;:20;;;;;;;;;;;862:3;;;;;;;834:53;;;909:6;895:21;;128:795;;;;;;;;;;;;;;;;:::o;178:582:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./Strings.sol\";\nimport 'zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol';\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract ArtistsTradingCard is ERC721Token, Ownable {\n  \n\n  using Strings for string;\n  uint256 internal nextTokenId = 0;\n  \n\n  constructor() public ERC721Token(\"ArtistsTradingCard\", \"ATC\")  {  }\n\n\n  function mint() external onlyOwner {\n    uint256 tokenId = nextTokenId;\n    nextTokenId = nextTokenId.add(1);\n    super._mint(msg.sender, tokenId);\n  }\n\n\nfunction tokenURI(uint256 _tokenId) public view returns (string _tokenURI) {\n    return Strings.strConcat(\n        _tokenURI = 'https://storage.googleapis.com/artiststradingcard.com/artcard/',\nStrings.uint2str(_tokenId));\n  }\n\n}\n",
  "sourcePath": "/var/www/html/edit5/truffle/contracts/ArtistsTradingCard.sol",
  "ast": {
    "absolutePath": "/var/www/html/edit5/truffle/contracts/ArtistsTradingCard.sol",
    "exportedSymbols": {
      "ArtistsTradingCard": [
        67
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/var/www/html/edit5/truffle/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 445,
        "src": "26:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 1745,
        "src": "50:66:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 614,
        "src": "117:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1744,
              "src": "209:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1744",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "209:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "222:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$613",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "222:7:0"
          }
        ],
        "contractDependencies": [
          613,
          640,
          660,
          667,
          774,
          1357,
          1744
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          613,
          1744,
          1357,
          667,
          660,
          640,
          774
        ],
        "name": "ArtistsTradingCard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 444,
              "src": "244:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$444",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "238:25:0",
            "typeName": {
              "id": 10,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "256:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "constant": false,
            "id": 14,
            "name": "nextTokenId",
            "nodeType": "VariableDeclaration",
            "scope": 67,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "297:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "369:4:0",
              "statements": []
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4172746973747354726164696e6743617264",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:20:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d8b0d9b8b697e42406e176025176de9fe156616829466873b1eade452507d54e",
                      "typeString": "literal_string \"ArtistsTradingCard\""
                    },
                    "value": "ArtistsTradingCard"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "415443",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "361:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d8c2c2ecaf186c5f218d30e392a4cc080daeaf4b15f1f69eeec142250a711720",
                      "typeString": "literal_string \"ATC\""
                    },
                    "value": "ATC"
                  }
                ],
                "id": 19,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1744,
                  "src": "327:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1744_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:40:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:0"
            },
            "scope": 67,
            "src": "306:67:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "413:116:0",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 47,
                      "src": "419:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "419:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "nextTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "437:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "454:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "484:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "nextTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "468:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 556,
                        "src": "468:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "468:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "454:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "454:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "504:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "504:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "516:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "492:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArtistsTradingCard_$67",
                          "typeString": "contract super ArtistsTradingCard"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "492:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "492:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 587,
                  "src": "403:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "403:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:0"
            },
            "scope": 67,
            "src": "378:151:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "607:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "647:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6172746973747374726164696e67636172642e636f6d2f617274636172642f",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "659:64:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2dc628ddb73d2852e73aa25896b3b997e36599b3a3a4e3d9d8ca17e8224fe0e8",
                            "typeString": "literal_string \"https://storage.googleapis.com/artiststradingcard.com/artcard/\""
                          },
                          "value": "https://storage.googleapis.com/artiststradingcard.com/artcard/"
                        },
                        "src": "647:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "742:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$444_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 443,
                          "src": "725:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "725:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "620:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$444_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 371,
                      "src": "620:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 53,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "613:139:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "550:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "589:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:18:0"
            },
            "scope": 67,
            "src": "532:225:0",
            "stateMutability": "view",
            "superFunction": 1456,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "178:582:0"
      }
    ],
    "src": "0:761:0"
  },
  "legacyAST": {
    "absolutePath": "/var/www/html/edit5/truffle/contracts/ArtistsTradingCard.sol",
    "exportedSymbols": {
      "ArtistsTradingCard": [
        67
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/var/www/html/edit5/truffle/contracts/Strings.sol",
        "file": "./Strings.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 445,
        "src": "26:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 1745,
        "src": "50:66:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 614,
        "src": "117:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1744,
              "src": "209:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1744",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "209:11:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 613,
              "src": "222:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$613",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "222:7:0"
          }
        ],
        "contractDependencies": [
          613,
          640,
          660,
          667,
          774,
          1357,
          1744
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          613,
          1744,
          1357,
          667,
          660,
          640,
          774
        ],
        "name": "ArtistsTradingCard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11,
            "libraryName": {
              "contractScope": null,
              "id": 9,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 444,
              "src": "244:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$444",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "238:25:0",
            "typeName": {
              "id": 10,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "256:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "constant": false,
            "id": 14,
            "name": "nextTokenId",
            "nodeType": "VariableDeclaration",
            "scope": 67,
            "src": "266:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 13,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "297:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "369:4:0",
              "statements": []
            },
            "documentation": null,
            "id": 22,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4172746973747354726164696e6743617264",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:20:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d8b0d9b8b697e42406e176025176de9fe156616829466873b1eade452507d54e",
                      "typeString": "literal_string \"ArtistsTradingCard\""
                    },
                    "value": "ArtistsTradingCard"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "415443",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "361:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d8c2c2ecaf186c5f218d30e392a4cc080daeaf4b15f1f69eeec142250a711720",
                      "typeString": "literal_string \"ATC\""
                    },
                    "value": "ATC"
                  }
                ],
                "id": 19,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 16,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1744,
                  "src": "327:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1744_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:40:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:0:0"
            },
            "scope": 67,
            "src": "306:67:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "413:116:0",
              "statements": [
                {
                  "assignments": [
                    28
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 47,
                      "src": "419:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "419:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 29,
                    "name": "nextTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 14,
                    "src": "437:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31,
                      "name": "nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "454:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "484:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "nextTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "468:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 556,
                        "src": "468:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 35,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "468:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "454:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "454:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1759,
                          "src": "504:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "504:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "516:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1795,
                        "src": "492:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArtistsTradingCard_$67",
                          "typeString": "contract super ArtistsTradingCard"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "492:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "492:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 25,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 587,
                  "src": "403:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "403:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:0"
            },
            "scope": 67,
            "src": "378:151:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "607:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "647:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "hexValue": "68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f6172746973747374726164696e67636172642e636f6d2f617274636172642f",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "659:64:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2dc628ddb73d2852e73aa25896b3b997e36599b3a3a4e3d9d8ca17e8224fe0e8",
                            "typeString": "literal_string \"https://storage.googleapis.com/artiststradingcard.com/artcard/\""
                          },
                          "value": "https://storage.googleapis.com/artiststradingcard.com/artcard/"
                        },
                        "src": "647:76:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "742:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$444_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 443,
                          "src": "725:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "725:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "620:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$444_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 371,
                      "src": "620:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:132:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 53,
                  "id": 64,
                  "nodeType": "Return",
                  "src": "613:139:0"
                }
              ]
            },
            "documentation": null,
            "id": 66,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "550:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "589:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:18:0"
            },
            "scope": 67,
            "src": "532:225:0",
            "stateMutability": "view",
            "superFunction": 1456,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "178:582:0"
      }
    ],
    "src": "0:761:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x82029fee3bb86150743f0a7df46635bc7e1028d3",
      "transactionHash": "0x1cc42f7e259cb3a4bd9eb047ea3c6603c58a1841deb3b3a8ecc6a5645a8aaf3c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-29T03:22:12.434Z"
}